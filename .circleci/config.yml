aliases:
  - &docker_base
      docker:
        - image: circleci/node:10.19.0-buster
      steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - setup_remote_docker
      - run:
         name: Build and push docker images
         command: |
           CIRCLE_BRANCH=${CIRCLE_BRANCH} SERVICE=test ./scripts/build_and_publish_docker_images.sh    
  - &deploy-base
      docker:
        - image: circleci/node:10.19.0-buster
      steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "a9:2f:97:c3:64:10:80:c7:8e:2f:db:f7:a3:4a:53:66"
      - run:
          name: Build and push docker images
          command: |
            CIRCLE_BRANCH=${CIRCLE_BRANCH} ./scripts/deploy.sh
  - &filter-base
      filters:
        branches:
          only:
          - staging
          - master
          - volumes-read-write-config
  - &node-base
    working_directory: ~/source-verify
    docker:
    - image: circleci/node
    parameters:
      run_coveralls:
        type: boolean
        default: false
    steps:
    - run:
        name: Versions
        command: npm version
    - checkout
    - restore_cache:
        key: dependency-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
    - run:
        name: install-npm
        command: npm install
    - run:
        name: tslint
        command: npm run tslint
    - run:
        name: tsc and test
        command: npm run test
    - save_cache:
        key: dependency-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
        paths:
        - ./node_modules

version: 2
workflows:
  version: 2
  build_publish_deploy_docker:
    jobs:
      - build-push-ipfs:
          filters:
            branches:
              only:
              - staging
              - master
              - volumes-read-write-config
      - deploy:
          filters:
            branches:
              only:
              - staging
              - master
          requires:
          - build-push-ipfs
  node-multi-build:
    jobs:
      - node-v10
      - node-v12


jobs:
  build-push-ipfs: 
    <<: *docker_base
    environment:
      SERVICE: ipfs
  deploy:
    <<: *deploy-base
  node-v10:
    <<: *node-base
    docker:
    - image: circleci/node:10
  node-v12:
    <<: *node-base
    docker:
    - image: circleci/node:12
    environment:
      run_coveralls: "true"

