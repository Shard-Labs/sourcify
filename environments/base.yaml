version: "3.7"
x-project-repository-mount:
  &project-repository-mount
  type: bind
  source: ../repository

x-env-file-mount:
  &env-file-mount
  type: bind
  source: .env

x-project-base:
  &project-base
  env_file:
    - .env
  restart: always
  networks:
    - source-verify

networks:
  source-verify:
volumes:
  db:
  h5ai:
    driver: local

services:
  monitor:
    <<: *project-base
    image: ethereum/source-verify:monitor-${TAG}
    container_name: monitor-${TAG}
    volumes:
      - <<: *project-repository-mount
        target: /app/repository
    ports:
    - "${MONITOR_EXTERNAL_PORT}:${MONITOR_PORT}"
  ui:
    image: ethereum/source-verify:ui-${TAG}
    container_name: ui-${TAG}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${UI_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
    - <<: *env-file-mount
      target: /app/.env
    ports:
    - "${UI_EXTERNAL_PORT}:${UI_PORT}"
  server:
    <<: *project-base
    image: ethereum/source-verify:server-${TAG}
    container_name: server-${TAG}
    ports:
    - "${SERVER_EXTERNAL_PORT}:${SERVER_PORT}"
    volumes:
      - <<: *project-repository-mount
        target: /app/repository
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 10
  repository:
    <<: *project-base
    image: ethereum/source-verify:repository-${TAG}
    container_name: repository-${TAG}
    volumes:
      - <<: *project-repository-mount
        target: /data
        read_only: true
    ports:
    - ${REPOSITORY_EXTERNAL_PORT}:${REPOSITORY_PORT}
  s3sync:
    <<: *project-base
    image: ethereum/source-verify:s3-${TAG}
    container_name: s3-${TAG}
    volumes:
      - <<: *project-repository-mount
        target: /app/repository
